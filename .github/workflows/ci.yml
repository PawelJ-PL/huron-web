name: Continuous Integration

on:
  push:
    branches: [ '**' ]
    tags: [ 'v*' ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: frontend
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup Node"
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: 'frontend/package-lock.json'
      - name: "Install dependencies"
        run: "npm install"
      - name: "Run frontend tests"
        run: "npm run test"
      - name: "Linter"
        run: "npm run lint"
      - name: "Check formatting"
        run: "npm run formatter-check"

  build-frontend:
    runs-on: ubuntu-latest
    needs: [ "test-frontend" ]
    defaults:
      run:
        shell: bash
        working-directory: frontend
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup Node"
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: 'frontend/package-lock.json'
      - name: "Install dependencies"
        run: "npm install"
      - name: "Build app"
        run: "npm run build"
      - name: "Upload frontend artifact"
        uses: actions/upload-artifact@v2
        with:
          name: "frontend-${{github.sha}}"
          path: "frontend/build/"
          retention-days: 1
          if-no-files-found: "error"

  snyk-monitor-frontend:
    runs-on: ubuntu-latest
    needs: [ "test-frontend" ]
    if: "startsWith(github.ref, 'refs/tags/v')"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Monitor"
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: "monitor"
          args: "--file=frontend/package-lock.json"

  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup SBT"
        uses: olafurpg/setup-scala@v13
        with:
          java-version: openjdk@1.11
      - name: "Cache sbt"
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}
      - name: "Run backend tests"
        run: "sbt test"
      - name: "Check formatting"
        run: "sbt scalafmtCheckAll"
      - name: "Check formatting - sbt files"
        run: "sbt scalafmtSbtCheck"

  snyk-monitor-backend:
    runs-on: ubuntu-latest
    needs: [ "test-backend" ]
    if: "startsWith(github.ref, 'refs/tags/v')"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Add SBT dependency graph"
        run: 'echo -e "\naddSbtPlugin(\"net.virtual-void\" % \"sbt-dependency-graph\" % \"0.10.0-RC1\")" >> ./project/plugins.sbt'
        shell: "bash"
      - name: "Monitor"
        uses: snyk/actions/scala@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: "monitor"
          args: "--sbt-graph --file=build.sbt"

  build-publish-docker:
    runs-on: ubuntu-latest
    needs: [ "build-frontend", "test-backend" ]
    if: "startsWith(github.ref, 'refs/tags/v')"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Download frontend artifact"
        uses: actions/download-artifact@v2
        with:
          name: "frontend-${{github.sha}}"
          path: "frontend/build/"
      - name: "List frontend"
        run: "ls -l frontend/build/"
        shell: "bash"
      - name: "Login to Docker Hub"
        uses: docker/login-action@v1
        with:
          registry: "registry.gitlab.com"
          username: ${{ secrets.GITLAB_DOCKER_USERNAME }}
          password: ${{ secrets.GITLAB_DOCKER_PASSWORD }}
      - name: "Setup SBT"
        uses: olafurpg/setup-scala@v13
        with:
          java-version: openjdk@1.11
      - name: "Cache sbt"
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}
      - name: "Build and publish docker"
        run: "sbt docker:publish"
